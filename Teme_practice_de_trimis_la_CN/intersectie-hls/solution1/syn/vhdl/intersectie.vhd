-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity intersectie is
port (
    directions : IN STD_LOGIC_VECTOR (3 downto 0);
    semaphores : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of intersectie is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "intersectie_intersectie,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.457500,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=13,HLS_VERSION=2020_2}";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal directions_read_read_fu_58_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    directions_read_read_fu_58_p2 <= directions;

    semaphores_assign_proc : process(directions_read_read_fu_58_p2)
    begin
        if (((directions_read_read_fu_58_p2 = ap_const_lv4_1) or (directions_read_read_fu_58_p2 = ap_const_lv4_2) or (directions_read_read_fu_58_p2 = ap_const_lv4_3) or (directions_read_read_fu_58_p2 = ap_const_lv4_7) or (directions_read_read_fu_58_p2 = ap_const_lv4_B))) then 
            semaphores <= ap_const_lv2_1;
        elsif (((directions_read_read_fu_58_p2 = ap_const_lv4_E) or (directions_read_read_fu_58_p2 = ap_const_lv4_0) or (directions_read_read_fu_58_p2 = ap_const_lv4_F) or (directions_read_read_fu_58_p2 = ap_const_lv4_4) or (directions_read_read_fu_58_p2 = ap_const_lv4_5) or (directions_read_read_fu_58_p2 = ap_const_lv4_6) or (directions_read_read_fu_58_p2 = ap_const_lv4_8) or (directions_read_read_fu_58_p2 = ap_const_lv4_9) or (directions_read_read_fu_58_p2 = ap_const_lv4_A) or (directions_read_read_fu_58_p2 = ap_const_lv4_C) or (directions_read_read_fu_58_p2 = ap_const_lv4_D))) then 
            semaphores <= ap_const_lv2_2;
        else 
            semaphores <= "XX";
        end if; 
    end process;

end behav;
